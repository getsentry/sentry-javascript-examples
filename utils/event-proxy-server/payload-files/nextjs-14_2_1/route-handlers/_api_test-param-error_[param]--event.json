[
  {
    "dsn": "[[dsn]]",
    "event_id": "[[ID1]]",
    "sdk": {
      "name": "sentry.javascript.nextjs",
      "version": "7.110.1"
    },
    "sent_at": "[[ISODateString]]",
    "trace": {
      "environment": "qa",
      "public_key": "[[publicKey]]",
      "sample_rate": "1",
      "sampled": "true",
      "trace_id": "[[ID2]]",
      "transaction": "GET /api/test-param-error/[param]"
    }
  },
  {
    "type": "event"
  },
  {
    "breadcrumbs": [
      {
        "category": "console",
        "level": "log",
        "message": " \u001b[37m\u001b[1m○\u001b[22m\u001b[39m Compiling / ...",
        "timestamp": "[[timestamp]]"
      },
      {
        "category": "console",
        "level": "log",
        "message": " \u001b[32m\u001b[1m✓\u001b[22m\u001b[39m Compiled / in 3s (2143 modules)",
        "timestamp": "[[timestamp]]"
      },
      {
        "category": "console",
        "level": "log",
        "message": " \u001b[32m\u001b[1m✓\u001b[22m\u001b[39m Compiled /favicon.ico in 181ms (1216 modules)",
        "timestamp": "[[timestamp]]"
      },
      {
        "category": "console",
        "level": "log",
        "message": " \u001b[32m\u001b[1m✓\u001b[22m\u001b[39m Compiled /api/test-success in 130ms (1218 modules)",
        "timestamp": "[[timestamp]]"
      },
      {
        "category": "console",
        "level": "log",
        "message": " \u001b[32m\u001b[1m✓\u001b[22m\u001b[39m Compiled /api/test-error in 300ms (1190 modules)",
        "timestamp": "[[timestamp]]"
      },
      {
        "category": "console",
        "level": "log",
        "message": " \u001b[32m\u001b[1m✓\u001b[22m\u001b[39m Compiled /api/test-param-success/[param] in 237ms (1190 modules)",
        "timestamp": "[[timestamp]]"
      },
      {
        "category": "console",
        "level": "log",
        "message": " \u001b[32m\u001b[1m✓\u001b[22m\u001b[39m Compiled /api/test-param-error/[param] in 134ms (1192 modules)",
        "timestamp": "[[timestamp]]"
      }
    ],
    "contexts": {
      "app": {
        "app_memory": "[[highNumber]]",
        "app_start_time": "[[ISODateString]]"
      },
      "cloud_resource": {},
      "culture": {
        "locale": "en-US",
        "timezone": "Europe/Vienna"
      },
      "device": {
        "arch": "arm64",
        "boot_time": "[[ISODateString]]",
        "cpu_description": "Apple M1 Pro",
        "free_memory": "[[highNumber]]",
        "memory_size": "[[highNumber]]",
        "processor_count": 10,
        "processor_frequency": "[[highNumber]]"
      },
      "os": {
        "build": "23C64",
        "kernel_version": "23.2.0",
        "name": "macOS",
        "version": "14.2"
      },
      "runtime": {
        "name": "node",
        "version": "v20.12.1"
      },
      "trace": {
        "data": {
          "sentry.op": "http.server",
          "sentry.origin": "auto.function.nextjs",
          "sentry.sample_rate": 1,
          "sentry.source": "route"
        },
        "op": "http.server",
        "origin": "auto.function.nextjs",
        "span_id": "[[ID3]]",
        "trace_id": "[[ID2]]"
      }
    },
    "environment": "qa",
    "event_id": "[[ID1]]",
    "exception": {
      "values": [
        {
          "mechanism": {
            "handled": true,
            "type": "generic"
          },
          "stacktrace": {
            "frames": [
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} is.userland.fetchCache;let s=await this.actionAsyncStorage.run({isAppRoute:!0,isAction:function(e){let{isFetchAction:t,isURLEncodedAction:r, {snip}",
                "filename": "[[FILENAME1]]",
                "function": "e_.execute",
                "in_app": false,
                "lineno": 6,
                "module": "next.dist.compiled.next-server:app-route.runtime.dev",
                "post_context": [
                  "//# sourceMappingURL=app-route.runtime.dev.js.map"
                ],
                "pre_context": [
                  "(()=>{var e={\"./dist/compiled/@edge-runtime/cookies/index.js\":e=>{\"use strict\";var t=Object.defineProperty,r=Object.getOwnPropertyDescriptor {snip}",
                  " * cookie",
                  " * Copyright(c) 2012-2014 Roman Shtylman",
                  " * Copyright(c) 2015 Douglas Christopher Wilson",
                  " * MIT Licensed"
                ]
              },
              {
                "colno": 14,
                "filename": "[[FILENAME2]]",
                "function": "AsyncLocalStorage.run",
                "in_app": false,
                "lineno": 346,
                "module": "node:async_hooks"
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} Action:o,isFetchAction:a}}(e);return!!(t||r||n)}(e)},()=>H.wrap(this.requestAsyncStorage,n,()=>V.wrap(this.staticGenerationAsyncStorage,o,n= {snip}",
                "filename": "[[FILENAME1]]",
                "function": "<anonymous>",
                "in_app": false,
                "lineno": 6,
                "module": "next.dist.compiled.next-server:app-route.runtime.dev",
                "post_context": [
                  "//# sourceMappingURL=app-route.runtime.dev.js.map"
                ],
                "pre_context": [
                  "(()=>{var e={\"./dist/compiled/@edge-runtime/cookies/index.js\":e=>{\"use strict\";var t=Object.defineProperty,r=Object.getOwnPropertyDescriptor {snip}",
                  " * cookie",
                  " * Copyright(c) 2012-2014 Roman Shtylman",
                  " * Copyright(c) 2015 Douglas Christopher Wilson",
                  " * MIT Licensed"
                ]
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} },assetPrefix:(null==n?void 0:n.assetPrefix)||\"\"};return e.run(c,o,c)}};var I=r(\"./dist/compiled/react/index.js\"),U=r.n(I);let F=\"DYNAMIC_SE {snip}",
                "filename": "[[FILENAME1]]",
                "function": "Object.wrap",
                "in_app": false,
                "lineno": 6,
                "module": "next.dist.compiled.next-server:app-route.runtime.dev",
                "post_context": [
                  "//# sourceMappingURL=app-route.runtime.dev.js.map"
                ],
                "pre_context": [
                  "(()=>{var e={\"./dist/compiled/@edge-runtime/cookies/index.js\":e=>{\"use strict\";var t=Object.defineProperty,r=Object.getOwnPropertyDescriptor {snip}",
                  " * cookie",
                  " * Copyright(c) 2012-2014 Roman Shtylman",
                  " * Copyright(c) 2015 Douglas Christopher Wilson",
                  " * MIT Licensed"
                ]
              },
              {
                "colno": 14,
                "filename": "[[FILENAME2]]",
                "function": "AsyncLocalStorage.run",
                "in_app": false,
                "lineno": 346,
                "module": "node:async_hooks"
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} (t||r||n)}(e)},()=>H.wrap(this.requestAsyncStorage,n,()=>V.wrap(this.staticGenerationAsyncStorage,o,n=>{var o;let s=n.isStaticGeneration;if( {snip}",
                "filename": "[[FILENAME1]]",
                "function": "<anonymous>",
                "in_app": false,
                "lineno": 6,
                "module": "next.dist.compiled.next-server:app-route.runtime.dev",
                "post_context": [
                  "//# sourceMappingURL=app-route.runtime.dev.js.map"
                ],
                "pre_context": [
                  "(()=>{var e={\"./dist/compiled/@edge-runtime/cookies/index.js\":e=>{\"use strict\";var t=Object.defineProperty,r=Object.getOwnPropertyDescriptor {snip}",
                  " * cookie",
                  " * Copyright(c) 2012-2014 Roman Shtylman",
                  " * Copyright(c) 2015 Douglas Christopher Wilson",
                  " * MIT Licensed"
                ]
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} aftMode:r.isDraftMode,prerenderState:a};return r.store=s,e.run(s,n,s)}};function Y(){return new Response(null,{status:400})}function J(){ret {snip}",
                "filename": "[[FILENAME1]]",
                "function": "Object.wrap",
                "in_app": false,
                "lineno": 6,
                "module": "next.dist.compiled.next-server:app-route.runtime.dev",
                "post_context": [
                  "//# sourceMappingURL=app-route.runtime.dev.js.map"
                ],
                "pre_context": [
                  "(()=>{var e={\"./dist/compiled/@edge-runtime/cookies/index.js\":e=>{\"use strict\";var t=Object.defineProperty,r=Object.getOwnPropertyDescriptor {snip}",
                  " * cookie",
                  " * Copyright(c) 2012-2014 Roman Shtylman",
                  " * Copyright(c) 2015 Douglas Christopher Wilson",
                  " * MIT Licensed"
                ]
              },
              {
                "colno": 14,
                "filename": "[[FILENAME2]]",
                "function": "AsyncLocalStorage.run",
                "in_app": false,
                "lineno": 346,
                "module": "node:async_hooks"
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} SpanAttributes())||o.set(\"next.route\",l),(0,M.getTracer)().trace(d.runHandler,{spanName:`executing api route (app) ${l}`,attributes:{\"next.r {snip}",
                "filename": "[[FILENAME1]]",
                "function": "<anonymous>",
                "in_app": false,
                "lineno": 6,
                "module": "next.dist.compiled.next-server:app-route.runtime.dev",
                "post_context": [
                  "//# sourceMappingURL=app-route.runtime.dev.js.map"
                ],
                "pre_context": [
                  "(()=>{var e={\"./dist/compiled/@edge-runtime/cookies/index.js\":e=>{\"use strict\";var t=Object.defineProperty,r=Object.getOwnPropertyDescriptor {snip}",
                  " * cookie",
                  " * Copyright(c) 2012-2014 Roman Shtylman",
                  " * Copyright(c) 2015 Douglas Christopher Wilson",
                  " * MIT Licensed"
                ]
              },
              {
                "colno": 28,
                "context_line": "        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{",
                "filename": "[[FILENAME3]]",
                "function": "NextTracerImpl.trace",
                "in_app": false,
                "lineno": 122,
                "module": "next.dist.server.lib.trace:tracer",
                "post_context": [
                  "                const startTime = \"performance\" in globalThis ? globalThis.performance.now() : undefined;",
                  "                const onCleanup = ()=>{",
                  "                    rootSpanAttributesStore.delete(spanId);",
                  "                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && _constants.LogSpanAllowList.includes(type || \"\")) {",
                  "                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split(\".\").pop() || \"\").replace(/[A-Z] {snip}",
                  "                            start: startTime,",
                  "                            end: performance.now()"
                ],
                "pre_context": [
                  "        }",
                  "        const spanId = getSpanId();",
                  "        options.attributes = {",
                  "            \"next.span_name\": spanName,",
                  "            \"next.span_type\": type,",
                  "            ...options.attributes",
                  "        };"
                ]
              },
              {
                "colno": 518,
                "context_line": "'{snip} ve()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextMana {snip}",
                "filename": "[[FILENAME4]]",
                "function": "ContextAPI.with",
                "in_app": false,
                "lineno": 1,
                "module": "next.dist.compiled.@opentelemetry.api:index",
                "post_context": [],
                "pre_context": []
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} r{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.Noo {snip}",
                "filename": "[[FILENAME4]]",
                "function": "NoopContextManager.with",
                "in_app": false,
                "lineno": 1,
                "module": "next.dist.compiled.@opentelemetry.api:index",
                "post_context": [],
                "pre_context": []
              },
              {
                "colno": 103,
                "context_line": "        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{",
                "filename": "[[FILENAME3]]",
                "function": "<anonymous>",
                "in_app": false,
                "lineno": 122,
                "module": "next.dist.server.lib.trace:tracer",
                "post_context": [
                  "                const startTime = \"performance\" in globalThis ? globalThis.performance.now() : undefined;",
                  "                const onCleanup = ()=>{",
                  "                    rootSpanAttributesStore.delete(spanId);",
                  "                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && _constants.LogSpanAllowList.includes(type || \"\")) {",
                  "                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split(\".\").pop() || \"\").replace(/[A-Z] {snip}",
                  "                            start: startTime,",
                  "                            end: performance.now()"
                ],
                "pre_context": [
                  "        }",
                  "        const spanId = getSpanId();",
                  "        options.attributes = {",
                  "            \"next.span_name\": spanName,",
                  "            \"next.span_type\": type,",
                  "            ...options.attributes",
                  "        };"
                ]
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} tiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this. {snip}",
                "filename": "[[FILENAME4]]",
                "function": "ProxyTracer.startActiveSpan",
                "in_app": false,
                "lineno": 1,
                "module": "next.dist.compiled.@opentelemetry.api:index",
                "post_context": [],
                "pre_context": []
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} s.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeo {snip}",
                "filename": "[[FILENAME4]]",
                "function": "NoopTracer.startActiveSpan",
                "in_app": false,
                "lineno": 1,
                "module": "next.dist.compiled.@opentelemetry.api:index",
                "post_context": [],
                "pre_context": []
              },
              {
                "colno": 518,
                "context_line": "'{snip} ve()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextMana {snip}",
                "filename": "[[FILENAME4]]",
                "function": "ContextAPI.with",
                "in_app": false,
                "lineno": 1,
                "module": "next.dist.compiled.@opentelemetry.api:index",
                "post_context": [],
                "pre_context": []
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} r{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.Noo {snip}",
                "filename": "[[FILENAME4]]",
                "function": "NoopContextManager.with",
                "in_app": false,
                "lineno": 1,
                "module": "next.dist.compiled.@opentelemetry.api:index",
                "post_context": [],
                "pre_context": []
              },
              {
                "colno": 36,
                "context_line": "                    const result = fn(span);",
                "filename": "[[FILENAME3]]",
                "function": "<anonymous>",
                "in_app": false,
                "lineno": 140,
                "module": "next.dist.server.lib.trace:tracer",
                "post_context": [
                  "                    if (isPromise(result)) {",
                  "                        // If there's error make sure it throws",
                  "                        return result.then((res)=>{",
                  "                            span.end();",
                  "                            // Need to pass down the promise result,",
                  "                            // it could be react stream response with error { error, stream }",
                  "                            return res;"
                ],
                "pre_context": [
                  "                if (isRootSpan) {",
                  "                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));",
                  "                }",
                  "                try {",
                  "                    if (fn.length > 1) {",
                  "                        return fn(span, (err)=>closeSpanWithError(span, err));",
                  "                    }"
                ]
              },
              {
                "colno": "[[highNumber]]",
                "context_line": "'{snip} yncStorage:this.staticGenerationAsyncStorage});let o=await r(i,{params:t.params?function(e){let t={};for(let[r,n]of Object.entries(e))void 0 {snip}",
                "filename": "[[FILENAME1]]",
                "function": "<anonymous>",
                "in_app": false,
                "lineno": 6,
                "module": "next.dist.compiled.next-server:app-route.runtime.dev",
                "post_context": [
                  "//# sourceMappingURL=app-route.runtime.dev.js.map"
                ],
                "pre_context": [
                  "(()=>{var e={\"./dist/compiled/@edge-runtime/cookies/index.js\":e=>{\"use strict\";var t=Object.defineProperty,r=Object.getOwnPropertyDescriptor {snip}",
                  " * cookie",
                  " * Copyright(c) 2012-2014 Roman Shtylman",
                  " * Copyright(c) 2015 Douglas Christopher Wilson",
                  " * MIT Licensed"
                ]
              },
              {
                "colno": 10,
                "filename": "[[FILENAME5]]",
                "function": "Object.apply",
                "in_app": false,
                "lineno": 70,
                "module": "route.ts"
              },
              {
                "colno": 78,
                "filename": "[[FILENAME6]]",
                "function": "Object.apply",
                "in_app": false,
                "lineno": 37,
                "module": "@sentry.nextjs.esm.common:wrapRouteHandlerWithSentry"
              },
              {
                "colno": 70,
                "filename": "[[FILENAME7]]",
                "function": "withIsolationScope",
                "in_app": false,
                "lineno": 244,
                "module": "@sentry.core.esm:exports"
              },
              {
                "colno": 36,
                "filename": "[[FILENAME8]]",
                "function": "runWithAsyncContext",
                "in_app": false,
                "lineno": 799,
                "module": "@sentry.core.esm:hub"
              },
              {
                "colno": 25,
                "filename": "[[FILENAME9]]",
                "function": "Object.runWithAsyncContext",
                "in_app": false,
                "lineno": 48,
                "module": "@sentry.node.esm.async:hooks"
              },
              {
                "colno": 14,
                "filename": "[[FILENAME2]]",
                "function": "AsyncLocalStorage.run",
                "in_app": false,
                "lineno": 346,
                "module": "node:async_hooks"
              },
              {
                "colno": 14,
                "filename": "[[FILENAME9]]",
                "function": "eval",
                "in_app": false,
                "lineno": 49,
                "module": "@sentry.node.esm.async:hooks"
              },
              {
                "colno": 12,
                "filename": "[[FILENAME7]]",
                "function": "eval",
                "in_app": false,
                "lineno": 245,
                "module": "@sentry.core.esm:exports"
              },
              {
                "colno": 75,
                "filename": "[[FILENAME6]]",
                "function": "eval",
                "in_app": false,
                "lineno": 43,
                "module": "@sentry.nextjs.esm.common:wrapRouteHandlerWithSentry"
              },
              {
                "colno": 70,
                "filename": "[[FILENAME10]]",
                "function": "continueTrace",
                "in_app": false,
                "lineno": 289,
                "module": "@sentry.core.esm.tracing:trace"
              },
              {
                "colno": 36,
                "filename": "[[FILENAME8]]",
                "function": "runWithAsyncContext",
                "in_app": false,
                "lineno": 799,
                "module": "@sentry.core.esm:hub"
              },
              {
                "colno": 25,
                "filename": "[[FILENAME9]]",
                "function": "Object.runWithAsyncContext",
                "in_app": false,
                "lineno": 48,
                "module": "@sentry.node.esm.async:hooks"
              },
              {
                "colno": 14,
                "filename": "[[FILENAME2]]",
                "function": "AsyncLocalStorage.run",
                "in_app": false,
                "lineno": 346,
                "module": "node:async_hooks"
              },
              {
                "colno": 14,
                "filename": "[[FILENAME9]]",
                "function": "eval",
                "in_app": false,
                "lineno": 49,
                "module": "@sentry.node.esm.async:hooks"
              },
              {
                "colno": 12,
                "filename": "[[FILENAME10]]",
                "function": "eval",
                "in_app": false,
                "lineno": 290,
                "module": "@sentry.core.esm.tracing:trace"
              },
              {
                "colno": 83,
                "filename": "[[FILENAME6]]",
                "function": "eval",
                "in_app": false,
                "lineno": 50,
                "module": "@sentry.nextjs.esm.common:wrapRouteHandlerWithSentry"
              },
              {
                "colno": 70,
                "filename": "[[FILENAME10]]",
                "function": "startSpan",
                "in_app": false,
                "lineno": 101,
                "module": "@sentry.core.esm.tracing:trace"
              },
              {
                "colno": 36,
                "filename": "[[FILENAME8]]",
                "function": "runWithAsyncContext",
                "in_app": false,
                "lineno": 799,
                "module": "@sentry.core.esm:hub"
              },
              {
                "colno": 25,
                "filename": "[[FILENAME9]]",
                "function": "Object.runWithAsyncContext",
                "in_app": false,
                "lineno": 48,
                "module": "@sentry.node.esm.async:hooks"
              },
              {
                "colno": 14,
                "filename": "[[FILENAME2]]",
                "function": "AsyncLocalStorage.run",
                "in_app": false,
                "lineno": 346,
                "module": "node:async_hooks"
              },
              {
                "colno": 14,
                "filename": "[[FILENAME9]]",
                "function": "eval",
                "in_app": false,
                "lineno": 49,
                "module": "@sentry.node.esm.async:hooks"
              },
              {
                "colno": 66,
                "filename": "[[FILENAME10]]",
                "function": "eval",
                "in_app": false,
                "lineno": 102,
                "module": "@sentry.core.esm.tracing:trace"
              },
              {
                "colno": 18,
                "filename": "[[FILENAME7]]",
                "function": "withScope",
                "in_app": false,
                "lineno": 214,
                "module": "@sentry.core.esm:exports"
              },
              {
                "colno": 28,
                "filename": "[[FILENAME8]]",
                "function": "Hub.withScope",
                "in_app": false,
                "lineno": 216,
                "module": "@sentry.core.esm:hub"
              },
              {
                "colno": 98,
                "filename": "[[FILENAME10]]",
                "function": "eval",
                "in_app": false,
                "lineno": 118,
                "module": "@sentry.core.esm.tracing:trace"
              },
              {
                "colno": 26,
                "filename": "[[FILENAME11]]",
                "function": "handleCallbackErrors",
                "in_app": false,
                "lineno": 29,
                "module": "@sentry.core.esm.utils:handleCallbackErrors"
              },
              {
                "colno": 15,
                "filename": "[[FILENAME10]]",
                "function": "status.status",
                "in_app": false,
                "lineno": 119,
                "module": "@sentry.core.esm.tracing:trace"
              },
              {
                "colno": 108,
                "filename": "[[FILENAME6]]",
                "function": "eval",
                "in_app": false,
                "lineno": 60,
                "module": "@sentry.nextjs.esm.common:wrapRouteHandlerWithSentry"
              },
              {
                "colno": 26,
                "filename": "[[FILENAME11]]",
                "function": "handleCallbackErrors",
                "in_app": false,
                "lineno": 29,
                "module": "@sentry.core.esm.utils:handleCallbackErrors"
              },
              {
                "colno": 44,
                "filename": "[[FILENAME6]]",
                "function": "eval",
                "in_app": false,
                "lineno": 61,
                "module": "@sentry.nextjs.esm.common:wrapRouteHandlerWithSentry"
              },
              {
                "colno": 86,
                "filename": "[[FILENAME5]]",
                "function": "GET$1",
                "in_app": false,
                "lineno": 24,
                "module": "route.ts"
              }
            ]
          },
          "type": "Error",
          "value": "This is an error"
        }
      ]
    },
    "modules": {},
    "platform": "node",
    "request": {
      "cookies": {},
      "headers": {
        "accept": "*/*",
        "accept-encoding": "gzip, deflate, br",
        "accept-language": "en-US,en;q=0.5",
        "cache-control": "no-cache",
        "connection": "keep-alive",
        "host": "localhost:3030",
        "pragma": "no-cache",
        "referer": "http://localhost:3030/",
        "sec-fetch-dest": "empty",
        "sec-fetch-mode": "cors",
        "sec-fetch-site": "same-origin",
        "user-agent": "[[user-agent]]",
        "x-forwarded-for": "::ffff:127.0.0.1",
        "x-forwarded-host": "localhost:3030",
        "x-forwarded-port": "3030",
        "x-forwarded-proto": "http"
      },
      "url": "http://localhost:3030"
    },
    "sdk": {
      "integrations": [
        "InboundFilters",
        "FunctionToString",
        "LinkedErrors",
        "RequestData",
        "Console",
        "Undici",
        "OnUnhandledRejection",
        "ContextLines",
        "LocalVariables",
        "Context",
        "Modules",
        "RewriteFrames",
        "Http",
        "OnUncaughtException"
      ],
      "name": "sentry.javascript.nextjs",
      "packages": [
        {
          "name": "npm:@sentry/nextjs",
          "version": "7.110.1"
        },
        {
          "name": "npm:@sentry/node",
          "version": "7.110.1"
        }
      ],
      "version": "7.110.1"
    },
    "server_name": "D9M3PY4LQ7.local",
    "tags": {
      "runtime": "node",
      "transaction": "GET /api/test-param-error/[param]"
    },
    "timestamp": "[[timestamp]]",
    "transaction": " "
  }
]