[
  {
    "dsn": "[[dsn]]",
    "event_id": "[[ID1]]",
    "sdk": {
      "name": "sentry.javascript.node",
      "version": "8.0.0-beta.3"
    },
    "sent_at": "[[ISODateString]]",
    "trace": {
      "environment": "qa",
      "public_key": "[[publicKey]]",
      "sample_rate": "1",
      "sampled": "true",
      "trace_id": "[[ID2]]",
      "transaction": "GET /test-param-error/1337"
    }
  },
  {
    "type": "event"
  },
  {
    "contexts": {
      "app": {
        "app_memory": "[[highNumber]]",
        "app_start_time": "[[ISODateString]]"
      },
      "cloud_resource": {},
      "culture": {
        "locale": "en-US",
        "timezone": "Europe/Vienna"
      },
      "device": {
        "arch": "arm64",
        "boot_time": "[[ISODateString]]",
        "cpu_description": "Apple M1 Pro",
        "free_memory": "[[highNumber]]",
        "memory_size": "[[highNumber]]",
        "processor_count": 10,
        "processor_frequency": "[[highNumber]]"
      },
      "os": {
        "build": "23C64",
        "kernel_version": "23.2.0",
        "name": "macOS",
        "version": "14.2"
      },
      "runtime": {
        "name": "node",
        "version": "v20.12.1"
      },
      "trace": {
        "span_id": "[[ID3]]",
        "trace_id": "[[ID2]]"
      }
    },
    "environment": "qa",
    "event_id": "[[ID1]]",
    "exception": {
      "values": [
        {
          "mechanism": {
            "handled": true,
            "type": "generic"
          },
          "stacktrace": {
            "frames": [
              {
                "colno": 5,
                "filename": "[[FILENAME1]]",
                "function": "processTicksAndRejections",
                "in_app": false,
                "lineno": 95,
                "module": "task_queues"
              },
              {
                "colno": 29,
                "context_line": "            return callback.apply(instance, args);",
                "filename": "[[FILENAME2]]",
                "function": "?",
                "in_app": false,
                "lineno": 38,
                "module": "@nestjs.core.router:router-execution-context",
                "post_context": [
                  "        };",
                  "        return async (req, res, next) => {",
                  "            const args = this.contextUtils.createNullArray(argsLength);",
                  "            fnCanActivate && (await fnCanActivate([req, res, next]));",
                  "            this.responseController.setStatus(res, httpStatusCode);",
                  "            hasCustomHeaders &&",
                  "                this.responseController.setHeaders(res, responseHeaders);"
                ],
                "pre_context": [
                  "        const pipes = this.pipesContextCreator.create(instance, callback, moduleKey, contextId, inquirerId);",
                  "        const guards = this.guardsContextCreator.create(instance, callback, moduleKey, contextId, inquirerId);",
                  "        const interceptors = this.interceptorsContextCreator.create(instance, callback, moduleKey, contextId, inquirerId);",
                  "        const fnCanActivate = this.createGuardsFn(guards, instance, callback, contextType);",
                  "        const fnApplyPipes = this.createPipesFn(pipes, paramsOptions);",
                  "        const handler = (args, req, res, next) => async () => {",
                  "            fnApplyPipes && (await fnApplyPipes(args, req, res, next));"
                ]
              },
              {
                "colno": 32,
                "context_line": "        return this.appService.testParamError(param);",
                "filename": "[[FILENAME3]]",
                "function": "AppController.testParamError",
                "in_app": true,
                "lineno": 32,
                "module": "app.controller",
                "post_context": [
                  "    };",
                  "    AppController.prototype.testSuccessManual = function () {",
                  "        return this.appService.testSuccessManual();",
                  "    };",
                  "    AppController.prototype.testErrorManual = function () {",
                  "        return this.appService.testErrorManual();",
                  "    };"
                ],
                "pre_context": [
                  "    AppController.prototype.testError = function () {",
                  "        return this.appService.testError();",
                  "    };",
                  "    AppController.prototype.testParamSuccess = function (param) {",
                  "        return this.appService.testParamSuccess(param);",
                  "    };",
                  "    AppController.prototype.testParamError = function (param) {"
                ]
              },
              {
                "colno": 16,
                "context_line": "        return __awaiter(this, void 0, void 0, function () {",
                "filename": "[[FILENAME4]]",
                "function": "AppService.testParamError",
                "in_app": true,
                "lineno": 96,
                "module": "app.service",
                "post_context": [
                  "            var exceptionId;",
                  "            return __generator(this, function (_a) {",
                  "                switch (_a.label) {",
                  "                    case 0:",
                  "                        exceptionId = Sentry.captureException(new Error('This is an error'));",
                  "                        return [4 /*yield*/, Sentry.flush(2000)];",
                  "                    case 1:"
                ],
                "pre_context": [
                  "            });",
                  "        });",
                  "    };",
                  "    AppService.prototype.testParamSuccess = function (param) {",
                  "        return { paramWas: param };",
                  "    };",
                  "    AppService.prototype.testParamError = function (param) {"
                ]
              },
              {
                "colno": 12,
                "context_line": "    return new (P || (P = Promise))(function (resolve, reject) {",
                "filename": "[[FILENAME4]]",
                "function": "__awaiter",
                "in_app": true,
                "lineno": 33,
                "module": "app.service",
                "post_context": [
                  "        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }",
                  "        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }",
                  "        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }",
                  "        step((generator = generator.apply(thisArg, _arguments || [])).next());",
                  "    });",
                  "};",
                  "var __generator = (this && this.__generator) || function (thisArg, body) {"
                ],
                "pre_context": [
                  "    var result = {};",
                  "    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);",
                  "    __setModuleDefault(result, mod);",
                  "    return result;",
                  "};",
                  "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {",
                  "    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }"
                ]
              },
              {
                "filename": "[[FILENAME5]]",
                "function": "new Promise",
                "in_app": false,
                "module": "<anonymous>"
              },
              {
                "colno": 71,
                "context_line": "        step((generator = generator.apply(thisArg, _arguments || [])).next());",
                "filename": "[[FILENAME4]]",
                "function": "?",
                "in_app": true,
                "lineno": 37,
                "module": "app.service",
                "post_context": [
                  "    });",
                  "};",
                  "var __generator = (this && this.__generator) || function (thisArg, body) {",
                  "    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;",
                  "    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { re {snip}",
                  "    function verb(n) { return function (v) { return step([n, v]); }; }",
                  "    function step(op) {"
                ],
                "pre_context": [
                  "};",
                  "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {",
                  "    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }",
                  "    return new (P || (P = Promise))(function (resolve, reject) {",
                  "        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }",
                  "        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }",
                  "        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }"
                ]
              },
              {
                "colno": 53,
                "context_line": "    function verb(n) { return function (v) { return step([n, v]); }; }",
                "filename": "[[FILENAME4]]",
                "function": "Object.next",
                "in_app": true,
                "lineno": 43,
                "module": "app.service",
                "post_context": [
                  "    function step(op) {",
                  "        if (f) throw new TypeError(\"Generator is already executing.\");",
                  "        while (g && (g = 0, op[0] && (_ = 0)), _) try {",
                  "            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.ca {snip}",
                  "            if (y = 0, t) op = [op[0] & 2, t.value];",
                  "            switch (op[0]) {",
                  "                case 0: case 1: t = op; break;"
                ],
                "pre_context": [
                  "        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }",
                  "        step((generator = generator.apply(thisArg, _arguments || [])).next());",
                  "    });",
                  "};",
                  "var __generator = (this && this.__generator) || function (thisArg, body) {",
                  "    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;",
                  "    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { re {snip}"
                ]
              },
              {
                "colno": 23,
                "context_line": "            op = body.call(thisArg, _);",
                "filename": "[[FILENAME4]]",
                "function": "step",
                "in_app": true,
                "lineno": 62,
                "module": "app.service",
                "post_context": [
                  "        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }",
                  "        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };",
                  "    }",
                  "};",
                  "Object.defineProperty(exports, \"__esModule\", { value: true });",
                  "exports.AppService = void 0;",
                  "var common_1 = require(\"@nestjs/common\");"
                ],
                "pre_context": [
                  "                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }",
                  "                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }",
                  "                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }",
                  "                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }",
                  "                    if (t[2]) _.ops.pop();",
                  "                    _.trys.pop(); continue;",
                  "            }"
                ]
              },
              {
                "colno": 63,
                "context_line": "                        exceptionId = Sentry.captureException(new Error('This is an error'));",
                "filename": "[[FILENAME4]]",
                "function": "AppService.?",
                "in_app": true,
                "lineno": 101,
                "module": "app.service",
                "post_context": [
                  "                        return [4 /*yield*/, Sentry.flush(2000)];",
                  "                    case 1:",
                  "                        _a.sent();",
                  "                        return [2 /*return*/, { exceptionId: exceptionId, paramWas: param }];",
                  "                }",
                  "            });",
                  "        });"
                ],
                "pre_context": [
                  "    };",
                  "    AppService.prototype.testParamError = function (param) {",
                  "        return __awaiter(this, void 0, void 0, function () {",
                  "            var exceptionId;",
                  "            return __generator(this, function (_a) {",
                  "                switch (_a.label) {",
                  "                    case 0:"
                ]
              }
            ]
          },
          "type": "Error",
          "value": "This is an error"
        }
      ]
    },
    "modules": {
      "accepts": "1.3.8",
      "append-field": "1.0.0",
      "array-flatten": "1.1.1",
      "body-parser": "1.20.2",
      "buffer-from": "1.1.2",
      "busboy": "1.6.0",
      "bytes": "3.1.2",
      "call-bind": "1.0.7",
      "concat-stream": "1.6.2",
      "content-disposition": "0.5.4",
      "content-type": "1.0.5",
      "cookie": "0.6.0",
      "cookie-signature": "1.0.6",
      "core-util-is": "1.0.3",
      "cors": "2.8.5",
      "debug": "4.3.4",
      "define-data-property": "1.1.4",
      "depd": "2.0.0",
      "destroy": "1.2.0",
      "dotenv": "16.4.5",
      "ee-first": "1.1.1",
      "encodeurl": "1.0.2",
      "es-define-property": "1.0.0",
      "es-errors": "1.3.0",
      "escape-html": "1.0.3",
      "etag": "1.8.1",
      "express": "4.19.2",
      "fast-safe-stringify": "2.1.1",
      "finalhandler": "1.2.0",
      "forwarded": "0.2.0",
      "fresh": "0.5.2",
      "function-bind": "1.1.2",
      "get-intrinsic": "1.2.4",
      "gopd": "1.0.1",
      "has-property-descriptors": "1.0.2",
      "has-proto": "1.0.3",
      "has-symbols": "1.0.3",
      "hasown": "2.0.2",
      "http-errors": "2.0.0",
      "iconv-lite": "0.4.24",
      "import-in-the-middle": "1.7.1",
      "inherits": "2.0.4",
      "ipaddr.js": "1.9.1",
      "is-core-module": "2.13.1",
      "iterare": "1.2.1",
      "media-typer": "0.3.0",
      "merge-descriptors": "1.0.1",
      "methods": "1.1.2",
      "mime": "1.6.0",
      "mime-db": "1.52.0",
      "mime-types": "2.1.35",
      "module-details-from-path": "1.0.3",
      "ms": "2.1.3",
      "multer": "1.4.4-lts.1",
      "negotiator": "0.6.3",
      "object-assign": "4.1.1",
      "object-inspect": "1.13.1",
      "on-finished": "2.4.1",
      "opentelemetry-instrumentation-fetch-node": "1.2.0",
      "parseurl": "1.3.3",
      "path-to-regexp": "0.1.7",
      "process-nextick-args": "2.0.1",
      "proxy-addr": "2.0.7",
      "qs": "6.11.0",
      "range-parser": "1.2.1",
      "raw-body": "2.5.2",
      "reflect-metadata": "0.2.2",
      "require-in-the-middle": "7.3.0",
      "resolve": "1.22.8",
      "rxjs": "7.8.1",
      "safe-buffer": "5.2.1",
      "safer-buffer": "2.1.2",
      "semver": "7.6.0",
      "send": "0.18.0",
      "serve-static": "1.15.0",
      "set-function-length": "1.2.2",
      "setprototypeof": "1.2.0",
      "shimmer": "1.2.1",
      "side-channel": "1.0.6",
      "source-map-support": "0.5.21",
      "statuses": "2.0.1",
      "streamsearch": "1.1.0",
      "supports-color": "5.5.0",
      "toidentifier": "1.0.1",
      "tslib": "2.6.2",
      "type-is": "1.6.18",
      "uid": "2.0.2",
      "unpipe": "1.0.0",
      "util-deprecate": "1.0.2",
      "utils-merge": "1.0.1",
      "vary": "1.1.2",
      "xtend": "4.0.2",
      "yallist": "4.0.0"
    },
    "platform": "node",
    "request": {
      "cookies": {},
      "headers": {
        "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "accept-encoding": "gzip, deflate, br",
        "accept-language": "en-US,en;q=0.5",
        "cache-control": "no-cache",
        "connection": "keep-alive",
        "host": "localhost:3030",
        "pragma": "no-cache",
        "sec-fetch-dest": "document",
        "sec-fetch-mode": "navigate",
        "sec-fetch-site": "none",
        "sec-fetch-user": "?1",
        "upgrade-insecure-requests": "1",
        "user-agent": "[[user-agent]]"
      },
      "method": "GET",
      "url": "http://localhost:3030/test-param-error/1337"
    },
    "sdk": {
      "integrations": [
        "InboundFilters",
        "FunctionToString",
        "LinkedErrors",
        "RequestData",
        "Console",
        "Http",
        "NodeFetch",
        "OnUncaughtException",
        "OnUnhandledRejection",
        "ContextLines",
        "LocalVariablesAsync",
        "Context",
        "Modules",
        "Express",
        "Fastify",
        "Graphql",
        "Mongo",
        "Mongoose",
        "Mysql",
        "Mysql2",
        "Postgres",
        "Nest",
        "Hapi",
        "Koa",
        "Connect"
      ],
      "name": "sentry.javascript.node",
      "packages": [
        {
          "name": "npm:@sentry/node",
          "version": "8.0.0-beta.3"
        }
      ],
      "version": "8.0.0-beta.3"
    },
    "server_name": "D9M3PY4LQ7.local",
    "timestamp": "[[timestamp]]",
    "transaction": "GET /test-param-error/:param"
  }
]
