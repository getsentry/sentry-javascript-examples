[
  {
    "dsn": "[[dsn]]",
    "event_id": "[[ID1]]",
    "sdk": {
      "name": "sentry.javascript.node",
      "version": "8.0.0-beta.3"
    },
    "sent_at": "[[ISODateString]]",
    "trace": {
      "environment": "qa",
      "public_key": "[[publicKey]]",
      "sample_rate": "1",
      "sampled": "true",
      "trace_id": "[[ID2]]",
      "transaction": "GET /test-param-error/1337"
    }
  },
  {
    "type": "event"
  },
  {
    "contexts": {
      "app": {
        "app_memory": "[[highNumber]]",
        "app_start_time": "[[ISODateString]]"
      },
      "cloud_resource": {},
      "culture": {
        "locale": "en-US",
        "timezone": "Europe/Vienna"
      },
      "device": {
        "arch": "arm64",
        "boot_time": "[[ISODateString]]",
        "cpu_description": "Apple M1 Pro",
        "free_memory": "[[highNumber]]",
        "memory_size": "[[highNumber]]",
        "processor_count": 10,
        "processor_frequency": "[[highNumber]]"
      },
      "os": {
        "build": "23C64",
        "kernel_version": "23.2.0",
        "name": "macOS",
        "version": "14.2"
      },
      "runtime": {
        "name": "node",
        "version": "v20.12.1"
      },
      "trace": {
        "parent_span_id": "[[ID3]]",
        "span_id": "[[ID4]]",
        "trace_id": "[[ID2]]"
      }
    },
    "environment": "qa",
    "event_id": "[[ID1]]",
    "exception": {
      "values": [
        {
          "mechanism": {
            "handled": true,
            "type": "generic"
          },
          "stacktrace": {
            "frames": [
              {
                "colno": 17,
                "context_line": "                done();",
                "filename": "[[FILENAME1]]",
                "function": "?",
                "in_app": false,
                "lineno": 194,
                "module": "@opentelemetry.instrumentation-fastify.build.src:instrumentation",
                "post_context": [
                  "            });",
                  "        };",
                  "    }",
                  "}",
                  "exports.FastifyInstrumentation = FastifyInstrumentation;",
                  "//# sourceMappingURL=instrumentation.js.map"
                ],
                "pre_context": [
                  "                (0, instrumentation_1.safeExecuteInTheMiddle)(() => instrumentation.getConfig().requestHook(span, { request }), e => {",
                  "                    if (e) {",
                  "                        instrumentation._diag.error('request hook failed', e);",
                  "                    }",
                  "                }, true);",
                  "            }",
                  "            return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {"
                ]
              },
              {
                "colno": 9,
                "context_line": "        cb(err, request, reply)",
                "filename": "[[FILENAME2]]",
                "function": "next",
                "in_app": false,
                "lineno": 233,
                "module": "fastify.lib:hooks",
                "post_context": [
                  "        return",
                  "      }",
                  "",
                  "      let result",
                  "      try {",
                  "        result = iterator(functions[i++], request, reply, next)",
                  "      } catch (error) {"
                ],
                "pre_context": [
                  "",
                  "function hookRunnerGenerator (iterator) {",
                  "  return function hookRunner (functions, request, reply, cb) {",
                  "    let i = 0",
                  "",
                  "    function next (err) {",
                  "      if (err || i === functions.length) {"
                ]
              },
              {
                "colno": 37,
                "context_line": "    result = request[kRouteContext].handler(request, reply)",
                "filename": "[[FILENAME3]]",
                "function": "preHandlerCallback",
                "in_app": false,
                "lineno": 137,
                "module": "fastify.lib:handleRequest",
                "post_context": [
                  "  } catch (err) {",
                  "    reply[kReplyIsError] = true",
                  "    reply.send(err)",
                  "    return",
                  "  }",
                  "",
                  "  if (result !== undefined) {"
                ],
                "pre_context": [
                  "    reply.send(err)",
                  "    return",
                  "  }",
                  "",
                  "  let result",
                  "",
                  "  try {"
                ]
              },
              {
                "colno": 12,
                "context_line": "    return __awaiter(this, void 0, void 0, function () {",
                "filename": "[[FILENAME4]]",
                "function": "Object.?",
                "in_app": true,
                "lineno": 99,
                "module": "app",
                "post_context": [
                  "        var exceptionId;",
                  "        return __generator(this, function (_a) {",
                  "            switch (_a.label) {",
                  "                case 0:",
                  "                    exceptionId = Sentry.captureException(new Error('This is an error'));",
                  "                    return [4 /*yield*/, Sentry.flush(2000)];",
                  "                case 1:"
                ],
                "pre_context": [
                  "        });",
                  "    });",
                  "});",
                  "app.get('/test-param-success/:param', function (req, res) {",
                  "    res.send({ paramWas: req.params.param });",
                  "});",
                  "app.get('/test-param-error/:param', function (req, res) {"
                ]
              },
              {
                "colno": 12,
                "context_line": "    return new (P || (P = Promise))(function (resolve, reject) {",
                "filename": "[[FILENAME4]]",
                "function": "__awaiter",
                "in_app": true,
                "lineno": 27,
                "module": "app",
                "post_context": [
                  "        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }",
                  "        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }",
                  "        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }",
                  "        step((generator = generator.apply(thisArg, _arguments || [])).next());",
                  "    });",
                  "};",
                  "var __generator = (this && this.__generator) || function (thisArg, body) {"
                ],
                "pre_context": [
                  "    var result = {};",
                  "    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);",
                  "    __setModuleDefault(result, mod);",
                  "    return result;",
                  "};",
                  "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {",
                  "    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }"
                ]
              },
              {
                "filename": "[[FILENAME5]]",
                "function": "new Promise",
                "in_app": false,
                "module": "<anonymous>"
              },
              {
                "colno": 71,
                "context_line": "        step((generator = generator.apply(thisArg, _arguments || [])).next());",
                "filename": "[[FILENAME4]]",
                "function": "?",
                "in_app": true,
                "lineno": 31,
                "module": "app",
                "post_context": [
                  "    });",
                  "};",
                  "var __generator = (this && this.__generator) || function (thisArg, body) {",
                  "    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;",
                  "    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { re {snip}",
                  "    function verb(n) { return function (v) { return step([n, v]); }; }",
                  "    function step(op) {"
                ],
                "pre_context": [
                  "};",
                  "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {",
                  "    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }",
                  "    return new (P || (P = Promise))(function (resolve, reject) {",
                  "        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }",
                  "        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }",
                  "        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }"
                ]
              },
              {
                "colno": 53,
                "context_line": "    function verb(n) { return function (v) { return step([n, v]); }; }",
                "filename": "[[FILENAME4]]",
                "function": "Object.next",
                "in_app": true,
                "lineno": 37,
                "module": "app",
                "post_context": [
                  "    function step(op) {",
                  "        if (f) throw new TypeError(\"Generator is already executing.\");",
                  "        while (g && (g = 0, op[0] && (_ = 0)), _) try {",
                  "            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.ca {snip}",
                  "            if (y = 0, t) op = [op[0] & 2, t.value];",
                  "            switch (op[0]) {",
                  "                case 0: case 1: t = op; break;"
                ],
                "pre_context": [
                  "        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }",
                  "        step((generator = generator.apply(thisArg, _arguments || [])).next());",
                  "    });",
                  "};",
                  "var __generator = (this && this.__generator) || function (thisArg, body) {",
                  "    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;",
                  "    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { re {snip}"
                ]
              },
              {
                "colno": 23,
                "context_line": "            op = body.call(thisArg, _);",
                "filename": "[[FILENAME4]]",
                "function": "step",
                "in_app": true,
                "lineno": 56,
                "module": "app",
                "post_context": [
                  "        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }",
                  "        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };",
                  "    }",
                  "};",
                  "Object.defineProperty(exports, \"__esModule\", { value: true });",
                  "var Sentry = __importStar(require(\"@sentry/node\"));",
                  "Sentry.init({"
                ],
                "pre_context": [
                  "                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }",
                  "                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }",
                  "                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }",
                  "                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }",
                  "                    if (t[2]) _.ops.pop();",
                  "                    _.trys.pop(); continue;",
                  "            }"
                ]
              },
              {
                "colno": 59,
                "context_line": "                    exceptionId = Sentry.captureException(new Error('This is an error'));",
                "filename": "[[FILENAME4]]",
                "function": "Object.?",
                "in_app": true,
                "lineno": 104,
                "module": "app",
                "post_context": [
                  "                    return [4 /*yield*/, Sentry.flush(2000)];",
                  "                case 1:",
                  "                    _a.sent();",
                  "                    res.send({ exceptionId: exceptionId, paramWas: req.params.param });",
                  "                    return [2 /*return*/];",
                  "            }",
                  "        });"
                ],
                "pre_context": [
                  "});",
                  "app.get('/test-param-error/:param', function (req, res) {",
                  "    return __awaiter(this, void 0, void 0, function () {",
                  "        var exceptionId;",
                  "        return __generator(this, function (_a) {",
                  "            switch (_a.label) {",
                  "                case 0:"
                ]
              }
            ]
          },
          "type": "Error",
          "value": "This is an error"
        }
      ]
    },
    "modules": {
      "abstract-logging": "2.0.1",
      "ajv": "8.12.0",
      "atomic-sleep": "1.0.0",
      "avvio": "8.3.0",
      "debug": "4.3.4",
      "fast-content-type-parse": "1.1.0",
      "fast-decode-uri-component": "1.0.1",
      "fast-deep-equal": "3.1.3",
      "fast-json-stringify": "5.14.1",
      "fast-querystring": "1.1.2",
      "fast-redact": "3.5.0",
      "fast-uri": "2.3.0",
      "fastify": "4.26.2",
      "fastq": "1.17.1",
      "find-my-way": "8.1.0",
      "forwarded": "0.2.0",
      "function-bind": "1.1.2",
      "hasown": "2.0.2",
      "import-in-the-middle": "1.7.1",
      "ipaddr.js": "1.9.1",
      "is-core-module": "2.13.1",
      "json-schema-ref-resolver": "1.0.1",
      "module-details-from-path": "1.0.3",
      "on-exit-leak-free": "2.1.2",
      "opentelemetry-instrumentation-fetch-node": "1.2.0",
      "pino": "8.20.0",
      "pino-std-serializers": "6.2.2",
      "process-warning": "3.0.0",
      "proxy-addr": "2.0.7",
      "quick-format-unescaped": "4.0.4",
      "require-in-the-middle": "7.3.0",
      "resolve": "1.22.8",
      "ret": "0.2.2",
      "reusify": "1.0.4",
      "rfdc": "1.3.1",
      "safe-regex2": "2.0.0",
      "safe-stable-stringify": "2.4.3",
      "secure-json-parse": "2.7.0",
      "semver": "7.6.0",
      "shimmer": "1.2.1",
      "sonic-boom": "3.8.1",
      "supports-color": "5.5.0",
      "thread-stream": "2.4.1",
      "toad-cache": "3.7.0",
      "uri-js": "4.4.1",
      "yallist": "4.0.0"
    },
    "platform": "node",
    "request": {
      "cookies": {},
      "headers": {
        "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "accept-encoding": "gzip, deflate, br",
        "accept-language": "en-US,en;q=0.5",
        "cache-control": "no-cache",
        "connection": "keep-alive",
        "host": "localhost:3030",
        "pragma": "no-cache",
        "sec-fetch-dest": "document",
        "sec-fetch-mode": "navigate",
        "sec-fetch-site": "none",
        "sec-fetch-user": "?1",
        "upgrade-insecure-requests": "1",
        "user-agent": "[[user-agent]]"
      },
      "method": "GET",
      "url": "http://localhost:3030/test-param-error/1337"
    },
    "sdk": {
      "integrations": [
        "InboundFilters",
        "FunctionToString",
        "LinkedErrors",
        "RequestData",
        "Console",
        "Http",
        "NodeFetch",
        "OnUncaughtException",
        "OnUnhandledRejection",
        "ContextLines",
        "LocalVariablesAsync",
        "Context",
        "Modules",
        "Express",
        "Fastify",
        "Graphql",
        "Mongo",
        "Mongoose",
        "Mysql",
        "Mysql2",
        "Postgres",
        "Nest",
        "Hapi",
        "Koa",
        "Connect"
      ],
      "name": "sentry.javascript.node",
      "packages": [
        {
          "name": "npm:@sentry/node",
          "version": "8.0.0-beta.3"
        }
      ],
      "version": "8.0.0-beta.3"
    },
    "server_name": "D9M3PY4LQ7.local",
    "timestamp": "[[timestamp]]",
    "transaction": "GET /test-param-error/:param"
  }
]
